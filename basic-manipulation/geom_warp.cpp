//USC EE569 Homework-2 Problem-1-(a) by Xuejing Lei//geometrical warping using triangle control points//Email: xjlei1117@gmail.com//Date: February 26, 2017#include <stdio.h>#include <iostream>#include <stdlib.h>#include <math.h>#include <string.h>using namespace std;double cal_x(double u, double v){	double a1, a2, a3, x;	if (v>=125 && v<=249.5 && u>=250-v && u<=v) {		a1 = 1; a2 = 1; a3 = -249.5;	} else if (u>=125 && u<=249.5 && v>=250-u && v<=u) {		a1 = 2; a2 = 0; a3 = -249.5;	} else if (u>=250.5 && u<=375 && v>=125+(u-375) && v<=125-(u-375)) {		a1 = 2; a2 = 0; a3 = -250.5;	} else if (v>=125 && v<=249.5 && u>=375-(v-125) && u<=375+(v-125)) {		a1 = 1; a2 = -1; a3 = 249.5;	} else if (v>=250.5 && v<=375 && u>=375-(500-v-125) && u<=375+(500-v-125)) {		a1 = 1; a2 = 1; a3 = -250.5;	} else if (u>=250.5 && u<=375 && v>=375+(u-375) && v<=375-(u-375)) {		a1 = 2; a2 = 0; a3 = -250.5;	} else if (u>=125 && u<=249.5 && v>=375-(u-125) && v<=375+(u-125)) {		a1 = 2; a2 = 0; a3 = -249.5;	} else if (v>=250.5 && v<=375 && u>=125-(500-v-125) && u<=125+(500-v-125)) {		a1 = 1; a2 = -1; a3 = 250.5;	} else { cout<<"wrong: u="<<u<<"v="<<v<<endl; exit(1);}			x = a1*u+a2*v+a3;	return x;}double cal_y(double u, double v){	double b1, b2, b3, y;	if (v>=125 && v<=249.5 && u>=250-v && u<=v) {		b1 = 0; b2 = 2; b3 = -249.5;	} else if (u>=125 && u<=249.5 && v>=250-u && v<=u) {		b1 = 1; b2 = 1; b3 = -249.5;	} else if (u>=250.5 && u<=375 && v>=125+(u-375) && v<=125-(u-375)) {		b1 = -1; b2 = 1; b3 = 250.5;	} else if (v>=125 && v<=249.5 && u>=375-(v-125) && u<=375+(v-125)) {		b1 = 0; b2 = 2; b3 = -249.5;	} else if (v>=250.5 && v<=375 && u>=375-(500-v-125) && u<=375+(500-v-125)) {		b1 = 0; b2 = 2; b3 = -250.5;	} else if (u>=250.5 && u<=375 && v>=375+(u-375) && v<=375-(u-375)) {		b1 = 1; b2 = 1; b3 = -250.5;	} else if (u>=125 && u<=249.5 && v>=375-(u-125) && v<=375+(u-125)) {		b1 = -1; b2 = 1; b3 = 249.5;	} else if (v>=250.5 && v<=375 && u>=125-(500-v-125) && u<=125+(500-v-125)) {		b1 = 0; b2 = 2; b3 = -250.5;	} else { cout<<"wrong: u="<<u<<"v="<<v<<endl; exit(1);}		y = b1*u+b2*v+b3;	return y;}int warping(char *fn_pre, int SizeC, int SizeR, int BytesPerPixel){	FILE *file, *file1;	char *filename = new char[30];	float deltak, deltaj;	int kint, jint;	double x = 0.0, y = 0.0, u = 0.0, v = 0.0, j = 0.0, k = 0.0;	memset(filename, 0, sizeof(filename));	strcpy(filename, fn_pre);	strcat(filename, ".raw");	if (!(file=fopen(filename,"rb"))) {		cout << "Cannot open file: " << filename <<endl;		exit(1);	}	unsigned char ***ImageData = new unsigned char **[SizeR+1];	unsigned char ***ImageData_New = new unsigned char **[SizeR];	for (int m=0; m<=SizeR; m++){		ImageData[m] = new unsigned char *[SizeC+1];	 	if (m < SizeR) {	 		for (int n=0; n<=SizeC; n++){	 			ImageData[m][n] = new unsigned char[BytesPerPixel];	 			if (n < SizeC){	 				fread(ImageData[m][n], sizeof(unsigned char), BytesPerPixel, file);	 			} else if (n == SizeC) {	 				for (int l=0; l<BytesPerPixel; l++) {	 					ImageData[m][n][l] = ImageData[m][n-1][l];	 				}	 			}	 		}		 	} else if (m == SizeR) {	 		for (int n1=0; n1<=SizeC; n1++) {	 			ImageData[m][n1] = new unsigned char[BytesPerPixel];	 			for (int l=0; l<BytesPerPixel; l++) {	 					 				ImageData[m][n1][l] = ImageData[m-1][n1][l];	 			}	 		}	 	}	 }	fclose(file);	memset(filename, 0, sizeof(filename));	strcpy(filename, fn_pre);	strcat(filename, "_warping.raw");	if (!(file1=fopen(filename,"wb"))) {	cout << "Cannot open file: " << filename << endl;		exit(1);	}	for (int p=0; p<SizeR; p++){		ImageData_New[p] = new unsigned char *[SizeC];	 	for (int q=0; q<SizeC; q++){	 		ImageData_New[p][q] = new unsigned char[BytesPerPixel];	 		if ((p>=0 && p<249 && q<=248-p) || (p>250 && p<500 && q<=p-251) 	 			|| (p>=0 && p<249 && q>=p+251) || (p>250 && p<500 && q>=499+251-p)) {	 			for (int m=0; m<BytesPerPixel; m++) {	 				ImageData_New[p][q][m] = 0;	 			}	 		} else {	 			u = q+1 - 0.5;	 			v = SizeR + 0.5 - (p+1);	 			x = cal_x(u, v);	 			y = cal_y(u, v);	 			k = x + 0.5 - 1;	 			j = SizeR + 0.5 - 1 - y;	 			kint = floor(k);	 			jint = floor(j);	 			deltak = k - kint;	 			deltaj = j - jint;	 			for (int m=0; m<BytesPerPixel; m++) {	 					 				ImageData_New[p][q][m] = round((1-deltaj)*(1-deltak)*(double)ImageData[jint][kint][m] + deltaj*(1-deltak)*(double)ImageData[jint][kint+1][m]	 					+ (1-deltaj)*deltak*(double)ImageData[jint+1][kint][m] + deltaj*deltak*(double)ImageData[jint+1][kint+1][m]);	 			}	 				 				 		}	 		fwrite(ImageData_New[p][q], sizeof(unsigned char), BytesPerPixel, file1);	 	}	 }	fclose(file1);	for (int i=0; i<=SizeR; i++) {		for (int j=0; j<=SizeC; j++) {			delete [] ImageData[i][j];		}	}	for (int i=0; i<SizeR; i++) {		for (int j=0; j<SizeC; j++) {			delete [] ImageData_New[i][j];		}	}	for (int i=0; i<=SizeR; i++) {		delete [] ImageData[i];	}	for (int i=0; i<SizeR; i++) {		delete [] ImageData_New[i];	}	delete [] ImageData;	delete [] ImageData_New;	delete [] filename;	return 0;}int main(int argc, char *argv[]){	int BytesPerPixel = 3;	int SizeC = 500, SizeR = 500;		// Check for proper syntax	if (argc < 3 || (argc >3 && argc<6)){		cout << "Syntax Error - Incorrect Parameter Usage:" << endl;		cout << "program_name cup1 cup2 [VolumeSize1 = 500] [RowSize1 = 500] [BytesPerPixel = 3]" << endl;		return 0;	}	warping(argv[1], SizeC, SizeR, BytesPerPixel);	warping(argv[2], SizeC, SizeR, BytesPerPixel);	return 0;}